openapi: 3.0.1

info:
  title: E-Commerce AP20
  description: API
  version: 1.0.0

servers:
- url: https://ummazone.herokuapp.com/
- url: http://ummazone.herokuapp.com/
- url: http://127.0.0.1:5000/

tags:
- name: User Endpoints
  description: All User Operations
- name: Amazon Data
  description: Amazon API
- name: Cart Endpoints
  description: All Cart Operations
- name: Review Endpoints
  description: All Review Operations

paths:
  /signup:
    post:
      tags:
      - User Endpoints
      summary: New signup
      operationId: signup
      requestBody:
        required: True
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                address:
                  type: string
              required:
                - name
                - email
                - password
                - address
      responses:
        200:
          description: Succesfully added user. Returns access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
        400:
          description: Bad input
          content: {}
        401:
          description: User already exists or Unauthorized
  
  /login:
    post:
      tags:
      - User Endpoints
      summary: Login with email and password
      operationId: login
      requestBody:
        required: True
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Succesfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
        400:
          description: Bad input
          content: {}
        401:
          description: Unauthorized
    
  /logout:
    get:
      tags:
        - User Endpoints
      summary: Logout and revoke tokens
      operationId: logout
      responses:
        200:
          description: Succesfully logged out and revoked tokens
      security:
      - Bearer: []

  /:
    get:
      tags:
      - Amazon Data
      summary: Homepage and Query for products
      operationId: query
      parameters:
      - name: q
        in: query
        description: Product search string
        schema:
          type: string
        required: false
      - name: page-number
        in: query
        description: Pagination
        required: false
        schema:
          type: integer
          default: 1
      - name: category
        in: query
        description: Search in category
        schema:
          type: string
        required: false
      responses:
        200:
          description: Products matching criteria or Random homepage products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productSearch'
        401:
          description: Unauthorized

  /product/{asin}:
    get:
      tags:
      - Amazon Data
      summary: Get info for <asin> product
      operationId: details
      parameters:
      - name: asin
        in: path
        description: Amazon Standard Identification Number
        required: true
        schema:
          type: string
      responses:
        200:
          description: Product Details
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/productDetails'
        401:
          description: Unauthorized
        404:
          description: No matching product
          
  /reviews/{asin}/:
    get:
      tags:
      - Amazon Data
      summary: Get reviews for <asin> product
      operationId: reviews
      parameters:
      - name: asin
        in: path
        description: Amazon Standard Identification Number
        required: true
        schema:
          type: string
      - name: stars
        in: query
        description: Filter by review stars
        schema:
          type: integer
          enum: [1,2,3,4,5]
        required: false
      - name: page-number
        in: query
        description: Pagination
        required: false
        schema:
          type: integer
          default: 1
      responses:
        200:
          description: Product Reviews
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productReviews'
        204:
          description: No reviews
        401:
          description: Unauthorized
    
  /categories:
    get:
      tags:
      - Amazon Data
      summary: Categories of products
      operationId: category
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categories'
        401:
          description: Unauthorized
          
  /cart/:
    put:
      tags:
      - Cart Endpoints
      summary: Add to Cart
      operationId: addToCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemInCart'
        required: true
      responses:
        200:
          description: Succesfully added to Cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemInCart'
        400:
          description: Bad input parameter
          content: {}
        401:
          description: Unauthorized
      security:
      - Bearer: []
      
  /cart/{status}:
    get:
      tags:
      - Cart Endpoints
      summary: View Cart
      operationId: delete
      parameters:
      - name: status
        in: path
        required: true
        schema:
          enum: ['orders', 'wishlist', 'incart'] 
          type: string
      responses:
        200:
          description: Cart with specified status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemInCart'
        400:
          description: Invalid status parameter
      security:
      - Bearer: []
      
  /cart/{status}/{asin}:
    delete:
      tags:
      - Cart Endpoints
      summary: Delete from cart
      operationId: deleteFromCart
      parameters:
      - name: status
        in: path
        required: true
        schema:
          enum: ['orders', 'wishlist', 'incart'] 
          type: string
      - name: asin
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK. Product deleted from cart
      security:
      - Bearer: []
      
  /cart/{status}/{asin}/:
    patch:
      tags:
      - Cart Endpoints
      summary: Edit product in cart
      operationId: editInCart
      parameters:
      - name: status
        in: path
        required: true
        schema:
          enum: ['orders', 'wishlist', 'incart'] 
          type: string
      - name: asin
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/cartEdit'
        required: true
      responses:
        200:
          description: Successfully edited cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemInCart'
        400:
          description: Bad input parameter
          content: {}
        401:
          description: Unauthorized
      security:
      - Bearer: []
      
  /reviews/{asin}:
    put:
      tags:
      - Review Endpoints
      summary: Add review for <asin> product
      operationId: addReview
      parameters:
      - name: asin
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addReview'
        required: true
      responses:
        200:
          description: Succesfully added review
        400:
          description: Bad input parameter
          content: {}
        401:
          description: Unauthorized
      security:
      - Bearer: []

components:
  schemas:
    productSearch:
      required:
      - createdAt
      - detectionMechanism
      - enabled
      - id
      - keyword
      - userId
      type: object
      properties:
        next_page: 
          type: integer
        totalProducts:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              asin:
                description: Amazon Standard Identification Number
                type: string
              thumbnail:
                type: string
              title:
                type: string
              price:
                type: object
                properties:
                  before_price:
                    type: number
                  currency:
                    type: string
                  current_price:
                    type: number
                  discounted:
                    type: boolean
                  savings_amount:
                    type: number
                  savings_percent:
                    type: number
              position:
                type: object
                properties:
                  global_position:
                    type: integer
                  position:
                    type: integer
              reviews:
                type: object
                properties:
                  rating:
                    type: number
                    minimum: 1.0
                    maximum: 5.0
                  total_reviews:
                    type: number
              url:
                type: string
          
    productDetails:
      type: object
      properties:
        asin:
          description: Amazon Standard Identification Number
          type: string
        title:
          type: string
        description:
          type: string
        main_image:
          type: string
        url:
          type: string
        images:
          type: array
          items:
            type: string
        feature_bullets:
          type: array
          items:
            type: string
        price:
          type: object
          properties:
            before_price:
              type: number
            currency:
              type: string
            current_price:
              type: number
            discounted:
              type: boolean
            savings_amount:
              type: number
            savings_percent:
              type: number
        product_information:
          type: object
          properties:
            brand:
              type: string
            manufacturer:
              type: string
            sold_by:
              type: string
        reviews:
            type: object
            properties:
              rating:
                type: number
                minimum: 1.0
                maximum: 5.0
              total_reviews:
                type: number
        also_bought:
            type: array
            items:
              type: string
        
          
    productReviews:
      type: object
      properties:
        next_page:
          type: integer
        reviews:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              rating:
                type: number
                minimum: 1.0
                maximum: 5.0
              review:
                type: string
              title:
                type: string
              verified_purchase:
                type: string
  
    categories:
      type: array
      items:
          type: object
          properties:
              category:
                type: string
              name:
                type: string

    itemInCart:
      type: object
      required:
      - asin
      - status
      - name
      - price
      - quantity
      properties:
        asin:
          type: string
        status:
          type: string
          enum: ['orders', 'wishlist', 'incart']
        name:
          type: string
        price:
          type: number
        quantity:
          type: integer
          
    cartEdit:
      type: object
      required:
      - status
      - quantity
      properties:
        status:
          type: string
        quantity:
          type: integer
          
    addReview:
      type: object
      required:
      - name
      - rating
      - review
      - title
      properties:
        name:
          type: string
          description: userName
        rating:
          type: number
          minimum: 1.0
          maximum: 5.0
        review:
          type: string
        title:
          type: string
          
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header